# Generated by Django 2.2.12 on 2020-06-01 23:58

from django.db import migrations, models
import django.db.models.deletion
import streams.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('wagtailimages', '0022_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('banner_title', models.CharField(blank=True, max_length=150, null=True)),
                ('banner_subtitle', models.CharField(blank=True, max_length=300, null=True)),
                ('body', wagtail.core.fields.StreamField([('cta', wagtail.core.blocks.StructBlock([('text_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('content', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'link', 'bold', 'italic', 'image', 'brand-color'])), ('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(blank=True, max_length=50, null=True, required=False)), ('internal_link', wagtail.core.blocks.PageChooserBlock(help_text='Select an internal page to link to. Internal links are used before external links (if both are provided).', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Type an external website to link to. Internal links are used before external links (if both are provided).', required=False))]))])), ('large_text', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('text_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right'), ('center', 'Center')]))])), ('large_listing_block', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('text_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('title', wagtail.core.blocks.CharBlock(max_length=50)), ('internal_link', wagtail.core.blocks.PageChooserBlock(help_text='Select an internal page to link to. Internal links are used before external links (if both are provided).', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Type an external website to link to. Internal links are used before external links (if both are provided).', required=False))])), ('small_listing_block', wagtail.core.blocks.StructBlock([('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('subtext', wagtail.core.blocks.CharBlock(help_text='Optional. Small text at the top of the card.', max_length=20, required=False)), ('title', wagtail.core.blocks.CharBlock(max_length=50)), ('internal_link', wagtail.core.blocks.PageChooserBlock(help_text='Select an internal page to link to. Internal links are used before external links (if both are provided).', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Type an external website to link to. Internal links are used before external links (if both are provided).', required=False))])))])), ('richtext', wagtail.core.blocks.RichTextBlock(features=['h3', 'bold', 'italic', 'ol', 'ul', 'link', 'image'], group='Text Sections', template='streams/simple_richtext_block.html')), ('buttons', wagtail.core.blocks.StructBlock([('buttons', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(blank=True, max_length=50, null=True, required=False)), ('internal_link', wagtail.core.blocks.PageChooserBlock(help_text='Select an internal page to link to. Internal links are used before external links (if both are provided).', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Type an external website to link to. Internal links are used before external links (if both are provided).', required=False))])))])), ('image_gallery', wagtail.core.blocks.StructBlock([('row', wagtail.core.blocks.StreamBlock([('two_thirds', wagtail.core.blocks.StructBlock([('large_image_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('two_thirds_image', wagtail.images.blocks.ImageChooserBlock()), ('one_third_image', wagtail.images.blocks.ImageChooserBlock())])), ('two_images_text', wagtail.core.blocks.StructBlock([('text_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('one_third_image', wagtail.images.blocks.ImageChooserBlock()), ('one_third_image_2', wagtail.images.blocks.ImageChooserBlock()), ('content', wagtail.core.blocks.RichTextBlock(features=['h3', 'link', 'bold', 'italic'])), ('link', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(blank=True, max_length=50, null=True, required=False)), ('internal_link', wagtail.core.blocks.PageChooserBlock(help_text='Select an internal page to link to. Internal links are used before external links (if both are provided).', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Type an external website to link to. Internal links are used before external links (if both are provided).', required=False))]))])), ('two_thirds_text', wagtail.core.blocks.StructBlock([('text_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock()), ('content', wagtail.core.blocks.RichTextBlock(features=['h3', 'link', 'bold', 'italic'])), ('link', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(blank=True, max_length=50, null=True, required=False)), ('internal_link', wagtail.core.blocks.PageChooserBlock(help_text='Select an internal page to link to. Internal links are used before external links (if both are provided).', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Type an external website to link to. Internal links are used before external links (if both are provided).', required=False))]))])), ('two_column', wagtail.core.blocks.StructBlock([('large_image_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('small_image', wagtail.images.blocks.ImageChooserBlock()), ('small_image_2', wagtail.images.blocks.ImageChooserBlock()), ('large_image', wagtail.images.blocks.ImageChooserBlock())])), ('image_row', wagtail.core.blocks.StructBlock([('row', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.StructBlock([('internal_link', wagtail.core.blocks.PageChooserBlock(help_text='Select an internal page to link to. Internal links are used before external links (if both are provided).', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Type an external website to link to. Internal links are used before external links (if both are provided).', required=False))], required=False))], icon='image')))]))], icon='image'))])), ('hr', streams.blocks.HorizontalRuleBlock()), ('horizontal_gallery', wagtail.core.blocks.StructBlock([('images', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('img', wagtail.images.blocks.ImageChooserBlock())], icon='image')))]))], blank=True, null=True)),
                ('banner_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
